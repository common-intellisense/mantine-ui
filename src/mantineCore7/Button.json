{
  "name": "Button",
  "props": {
    "autoContrast": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether button text color with filled variant should depend on background-color. If luminosity of the color prop is less than theme.luminosityThreshold, then theme.white will be used for text color, otherwise theme.black. Overrides theme.autoContrast.",
      "required": false,
      "description_zh": "确定具有填充变体的按钮文本颜色是否应取决于 background-color。如果 color 属性的亮度小于 theme.luminosityThreshold，则 theme.white 将用于文本颜色，否则使用 theme.black。覆盖 theme.autoContrast。"
    },
    "children": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Button content",
      "required": false,
      "description_zh": "按钮内容"
    },
    "color": {
      "default": "",
      "value": "",
      "type": "MantineColor",
      "description": "Key of theme.colors or any valid CSS color, theme.primaryColor by default",
      "required": false,
      "description_zh": "theme.colors 的键或任何有效的 CSS 颜色，默认为 theme.primaryColor"
    },
    "disabled": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Indicates disabled state",
      "required": false,
      "description_zh": "指示禁用状态"
    },
    "fullWidth": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether button should take 100% width of its parent container, false by default",
      "required": false,
      "description_zh": "确定 button 是否应采用其父容器的 100% 宽度，默认为 false"
    },
    "gradient": {
      "default": "",
      "value": "",
      "type": "MantineGradient",
      "description": "Gradient configuration used when variant=\"gradient\", default value is theme.defaultGradient",
      "required": false,
      "description_zh": "variant=“gradient” 时使用的渐变配置，默认值为 theme.defaultGradient"
    },
    "justify": {
      "default": "",
      "value": "",
      "type": "JustifyContent",
      "description": "Sets justify-content of inner element, can be used to change distribution of sections and label, 'center' by default",
      "required": false,
      "description_zh": "设置内部元素的 justify-content ，可用于更改部分和标签的分布，默认为 'center'"
    },
    "leftSection": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Content displayed on the left side of the button label",
      "required": false,
      "description_zh": "按钮标签左侧显示的内容"
    },
    "loaderProps": {
      "default": "",
      "value": "",
      "type": "LoaderProps",
      "description": "Props added to the Loader component (only visible when loading prop is set)",
      "required": false,
      "description_zh": "添加到 Loader 组件的 props（仅在设置 loading prop 时可见）"
    },
    "loading": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether the Loader component should be displayed over the button",
      "required": false,
      "description_zh": "确定是否应将 Loader 组件显示在按钮上"
    },
    "radius": {
      "default": "",
      "value": "",
      "type": "MantineRadius | number",
      "description": "Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default",
      "required": false,
      "description_zh": "theme.radius 的键或任何用于设置 border-radius 的任何有效 CSS 值，默认为 theme.defaultRadius"
    },
    "rightSection": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Content displayed on the right side of the button label",
      "required": false,
      "description_zh": "按钮标签右侧显示的内容"
    },
    "size": {
      "default": "",
      "value": "",
      "type": "MantineSize | (string & {}) | \"compact-xs\" | \"compact-sm\" | \"compact-md\" | \"compact-lg\" | \"compact-xl\"",
      "description": "Controls button height, font-size and horizontal padding, 'sm' by default",
      "required": false,
      "description_zh": "控制按钮高度、字体大小和水平填充，默认为 'sm'"
    }
  },
  "link": "https://mantine.dev/core/button/?t=props",
  "link_zh": "https://mantine.dev/core/button/?t=props",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "Button"
}