{
  "name": "Dialog",
  "props": {
    "children": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Dialog content",
      "required": false,
      "description_zh": "对话框内容"
    },
    "keepMounted": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "If set dialog will not be unmounted from the DOM when it is hidden, display: none styles will be added instead",
      "required": false,
      "description_zh": "如果 set 对话框在隐藏时不会从 DOM 中卸载，则将添加 display： none 样式"
    },
    "onClose": {
      "default": "",
      "value": "",
      "type": "(() => void)",
      "description": "Called when the close button is clicked",
      "required": false,
      "description_zh": "单击关闭按钮时调用"
    },
    "portalProps": {
      "default": "",
      "value": "",
      "type": "Omit<PortalProps, \"children\">",
      "description": "Props to pass down to the Portal component when withinPortal is set",
      "required": false,
      "description_zh": "设置 withinPortal 时向下传递到 Portal 组件的 props"
    },
    "position": {
      "default": "",
      "value": "",
      "type": "{ top?: string | number; left?: string | number | undefined; bottom?: string | number | undefined; right?: string | number | undefined; } | undefined",
      "description": "Affix position on screen, defaults value is { bottom: 0, right: 0 }",
      "required": false,
      "description_zh": "在屏幕上附加位置，默认值为 { bottom： 0， right： 0 }"
    },
    "radius": {
      "default": "",
      "value": "",
      "type": "MantineRadius | number",
      "description": "Key of theme.radius or any valid CSS value to set border-radius, numbers are converted to rem, theme.defaultRadius by default",
      "required": false,
      "description_zh": "key的 theme.radius 或任何有效的 CSS 值来设置 border-radius，数字默认转换为 rem，theme.defaultRadius"
    },
    "shadow": {
      "default": "",
      "value": "",
      "type": "MantineShadow",
      "description": "Key of theme.shadows or any valid CSS value to set box-shadow, none by default",
      "required": false,
      "description_zh": "key，或者任何有效的 CSS 值来设置 box-shadow，默认为 none"
    },
    "size": {
      "default": "",
      "value": "",
      "type": "number | MantineSize | (string & {})",
      "description": "Controls width of the dialog, 'md' by default",
      "required": false,
      "description_zh": "控制对话框的宽度，默认为 'md'"
    },
    "transitionProps": {
      "default": "",
      "value": "",
      "type": "TransitionProps",
      "description": "Overrides default transition, { transition: 'pop-top-right', duration: 200 } by default",
      "required": false,
      "description_zh": "默认覆盖默认过渡 { transition： 'pop-top-right'， duration： 200 }"
    },
    "withBorder": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether the paper should have border, border color depends on color scheme, false by default",
      "required": false,
      "description_zh": "确定纸张是否应具有边框，边框颜色取决于配色方案，默认情况下为 false"
    },
    "withCloseButton": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether the close button should be displayed, true by default",
      "required": false,
      "description_zh": "确定是否应显示关闭按钮，默认情况下为 true"
    },
    "withinPortal": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether component should be rendered within portal, true by default",
      "required": false,
      "description_zh": "确定是否应在 Portal 中呈现组件，默认为 true"
    },
    "zIndex": {
      "default": "",
      "value": "",
      "type": "string | number",
      "description": "Root element z-index property, 200 by default",
      "required": false,
      "description_zh": "根元素 z-index 属性，默认为 200"
    },
    "opened": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Opened state",
      "required": true,
      "description_zh": "打开状态"
    }
  },
  "link": "https://mantine.dev/core/dialog/?t=props",
  "link_zh": "https://mantine.dev/core/dialog/?t=props",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "Dialog"
}
