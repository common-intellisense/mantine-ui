{
  "name": "NumberInput",
  "props": {
    "allowDecimal": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether decimal values are allowed, true by default",
      "required": false,
      "description_zh": "确定是否允许使用十进制值，默认情况下为 true"
    },
    "allowLeadingZeros": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether leading zeros are allowed. If set to false, leading zeros are removed when the input value becomes a valid number. true by default",
      "required": false,
      "description_zh": "确定是否允许使用前导零。如果设置为 false，则当 input 值成为有效数字时，将删除前导零。默认为 true"
    },
    "allowNegative": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether negative values are allowed, true by default",
      "required": false,
      "description_zh": "确定是否允许使用负值，默认情况下为 true"
    },
    "allowedDecimalSeparators": {
      "default": "",
      "value": "",
      "type": "string[]",
      "description": "Characters which when pressed result in a decimal separator, ['.'] by default",
      "required": false,
      "description_zh": "按下时产生小数分隔符的字符，默认情况下为 ['.']"
    },
    "clampBehavior": {
      "default": "",
      "value": "",
      "type": "none / blur / strict",
      "description": "Controls how value is clamped, strict – user is not allowed to enter values that are not in [min, max] range, blur – user is allowed to enter any values, but the value is clamped when the input loses focus (default behavior), none – lifts all restrictions, [min, max] range is applied only for controls and up/down keys",
      "required": false,
      "description_zh": "控制值的钳制方式，严格 – 不允许用户输入不在 [min， max] 范围内的值，模糊 – 允许用户输入任何值，但当输入失去焦点时该值被钳制（默认行为），none – 解除所有限制，[min， max] 范围仅适用于控件和上/下键"
    },
    "decimalScale": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "Limits the number of digits that can be entered after the decimal point",
      "required": false,
      "description_zh": "限制小数点后可输入的位数"
    },
    "decimalSeparator": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "Character used as a decimal separator, '.' by default",
      "required": false,
      "description_zh": "用作小数分隔符的字符，默认为 '.'"
    },
    "defaultValue": {
      "default": "",
      "value": "",
      "type": "string | number",
      "description": "Uncontrolled component default value",
      "required": false,
      "description_zh": "非受控零部件默认值"
    },
    "description": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Contents of Input.Description component. If not set, description is not rendered.",
      "required": false,
      "description_zh": "Input.Description 组件的内容。如果未设置，则不会呈现 description。"
    },
    "descriptionProps": {
      "default": "",
      "value": "",
      "type": "Record<string, any>",
      "description": "Props passed down to the Input.Description component",
      "required": false,
      "description_zh": "向下传递到 Input.Description 组件的 props"
    },
    "disabled": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Sets disabled attribute on the input element",
      "required": false,
      "description_zh": "在 input 元素上设置 disabled 属性"
    },
    "error": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Contents of Input.Error component. If not set, error is not rendered.",
      "required": false,
      "description_zh": "Input.Error 组件的内容。如果未设置，则不会呈现 error。"
    },
    "errorProps": {
      "default": "",
      "value": "",
      "type": "Record<string, any>",
      "description": "Props passed down to the Input.Error component",
      "required": false,
      "description_zh": "向下传递到 Input.Error 组件的 props"
    },
    "fixedDecimalScale": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "If set, 0s are added after decimalSeparator to match given decimalScale. false by default",
      "required": false,
      "description_zh": "如果设置，则在 decimalSeparator 后添加 0 以匹配给定的 decimalScale。false 默认"
    },
    "handlersRef": {
      "default": "",
      "value": "",
      "type": "ForwardedRef<NumberInputHandlers> | undefined",
      "description": "Increment/decrement handlers",
      "required": false,
      "description_zh": "递增/递减处理程序"
    },
    "hideControls": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether the up/down controls should be hidden, false by default",
      "required": false,
      "description_zh": "确定是否应隐藏 up/down 控件，默认为 false"
    },
    "inputContainer": {
      "default": "",
      "value": "",
      "type": "((children: ReactNode) => ReactNode)",
      "description": "Input container component, React.Fragment by default",
      "required": false,
      "description_zh": "输入容器组件，默认为 React.Fragment"
    },
    "inputSize": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "size prop added to the input element",
      "required": false,
      "description_zh": "size 属性添加到 input 元素"
    },
    "inputWrapperOrder": {
      "default": "",
      "value": "",
      "type": "(\"input\" | \"label\" | \"description\" | \"error\")[]",
      "description": "Controls order of the elements, ['label', 'description', 'input', 'error'] by default",
      "required": false,
      "description_zh": "默认控制元素的顺序 ['label'， 'description'， 'input'， 'error']"
    },
    "isAllowed": {
      "default": "",
      "value": "",
      "type": "((values: NumberFormatValues) => boolean)",
      "description": "A function to validate the input value. If this function returns false, the onChange will not be called and the input value will not change.",
      "required": false,
      "description_zh": "用于验证输入值的函数。如果此函数返回 false，则不会调用 onChange，并且输入值不会更改。"
    },
    "label": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Contents of Input.Label component. If not set, label is not rendered.",
      "required": false,
      "description_zh": "Input.Label 组件的内容。如果未设置，则不会渲染 label。"
    },
    "labelProps": {
      "default": "",
      "value": "",
      "type": "Record<string, any>",
      "description": "Props passed down to the Input.Label component",
      "required": false,
      "description_zh": "向下传递到 Input.Label 组件的 Props"
    },
    "leftSection": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Content section rendered on the left side of the input",
      "required": false,
      "description_zh": "在输入的左侧呈现的内容部分"
    },
    "leftSectionPointerEvents": {
      "default": "",
      "value": "",
      "type": "React.CSSProperties[\"pointerEvents\"]",
      "description": "Sets pointer-events styles on the leftSection element, 'none' by default",
      "required": false,
      "description_zh": "在 leftSection 元素上设置 pointer-events 样式，默认为 'none'"
    },
    "leftSectionProps": {
      "default": "",
      "value": "",
      "type": "React.ComponentPropsWithoutRef<\"div\">",
      "description": "Props passed down to the leftSection element",
      "required": false,
      "description_zh": "向下传递到 leftSection 元素的 props"
    },
    "leftSectionWidth": {
      "default": "",
      "value": "",
      "type": "React.CSSProperties[\"width\"]",
      "description": "Left section width, used to set width of the section and input padding-left, by default equals to the input height",
      "required": false,
      "description_zh": "Left section width，用于设置部分的宽度和输入 padding-left，默认情况下等于输入高度"
    },
    "max": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "Maximum possible value",
      "required": false,
      "description_zh": "最大可能值"
    },
    "min": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "Minimum possible value",
      "required": false,
      "description_zh": "最小可能值"
    },
    "onChange": {
      "default": "",
      "value": "",
      "type": "((value: string | number) => void)",
      "description": "Called when value changes",
      "required": false,
      "description_zh": "值更改时调用"
    },
    "onValueChange": {
      "default": "",
      "value": "",
      "type": "OnValueChange",
      "description": "Called when value changes with react-number-format payload",
      "required": false,
      "description_zh": "当 react-number-format payload 的值发生变化时调用"
    },
    "pointer": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether the input should have cursor: pointer style, false by default",
      "required": false,
      "description_zh": "确定输入是否应具有 cursor： pointer style，默认为 false"
    },
    "prefix": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "Prefix added before the input value",
      "required": false,
      "description_zh": "在 input 值之前添加的前缀"
    },
    "radius": {
      "default": "",
      "value": "",
      "type": "MantineRadius | number",
      "description": "Key of theme.radius or any valid CSS value to set border-radius, numbers are converted to rem, theme.defaultRadius by default",
      "required": false,
      "description_zh": "key的 theme.radius 或任何有效的 CSS 值来设置 border-radius，数字默认转换为 rem，theme.defaultRadius"
    },
    "required": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Adds required attribute to the input and a red asterisk on the right side of label, false by default",
      "required": false,
      "description_zh": "将 required 属性添加到输入中，并在 label 的右侧添加红色星号，默认为 false"
    },
    "rightSection": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Content section rendered on the right side of the input",
      "required": false,
      "description_zh": "内容部分呈现在输入的右侧"
    },
    "rightSectionPointerEvents": {
      "default": "",
      "value": "",
      "type": "React.CSSProperties[\"pointerEvents\"]",
      "description": "Sets pointer-events styles on the rightSection element, 'none' by default",
      "required": false,
      "description_zh": "在 rightSection 元素上设置 pointer-events 样式，默认为 'none'"
    },
    "rightSectionProps": {
      "default": "",
      "value": "",
      "type": "React.ComponentPropsWithoutRef<\"div\">",
      "description": "Props passed down to the rightSection element",
      "required": false,
      "description_zh": "向下传递到 rightSection 元素的 Props"
    },
    "rightSectionWidth": {
      "default": "",
      "value": "",
      "type": "React.CSSProperties[\"width\"]",
      "description": "Right section width, used to set width of the section and input padding-right, by default equals to the input height",
      "required": false,
      "description_zh": "Right section width，用于设置截面宽度和输入 padding-right，默认情况下等于输入高度"
    },
    "size": {
      "default": "",
      "value": "",
      "type": "MantineSize | (string & {})",
      "description": "Controls input height and horizontal padding, 'sm' by default",
      "required": false,
      "description_zh": "控制输入高度和水平填充，默认为 'sm'"
    },
    "startValue": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "Value set to the input when increment/decrement buttons are clicked or up/down arrows pressed if the input is empty, 0 by default",
      "required": false,
      "description_zh": "单击递增/递减按钮时设置为输入的值，如果输入为空，则按下向上/向下箭头，默认为 0"
    },
    "step": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "Number by which value will be incremented/decremented with up/down controls and keyboard arrows, 1 by default",
      "required": false,
      "description_zh": "使用向上/向下控件和键盘箭头递增/递减值的数字，默认为 1"
    },
    "stepHoldDelay": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "Initial delay in milliseconds before stepping the value.",
      "required": false,
      "description_zh": "步进值之前的初始延迟（以毫秒为单位）。"
    },
    "stepHoldInterval": {
      "default": "",
      "value": "",
      "type": "number | ((stepCount: number) => number)",
      "description": "Delay before stepping the value. Can be a number of milliseconds or a function that receives the current step count and returns the delay in milliseconds.",
      "required": false,
      "description_zh": "在单步执行值之前延迟。可以是毫秒数，也可以是接收当前步数并返回延迟（以毫秒为单位）的函数。"
    },
    "suffix": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "Suffix added after the input value",
      "required": false,
      "description_zh": "在输入值后添加的后缀"
    },
    "thousandSeparator": {
      "default": "",
      "value": "",
      "type": "string | boolean",
      "description": "A character used to separate thousands",
      "required": false,
      "description_zh": "用于分隔数千人的字符"
    },
    "thousandsGroupStyle": {
      "default": "",
      "value": "",
      "type": "none / thousand / lakh / wan",
      "description": "Defines the thousand grouping style.",
      "required": false,
      "description_zh": "定义千位分组样式。"
    },
    "trimLeadingZeroesOnBlur": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether leading zeros (e.g. 00100 -> 100) should be removed on blur, true by default",
      "required": false,
      "description_zh": "确定是否应在模糊时删除前导零（例如 00100 -> 100），默认为 true"
    },
    "type": {
      "default": "",
      "value": "",
      "type": "text / tel / password",
      "description": "Controls input type attribute, 'text' by default",
      "required": false,
      "description_zh": "控制输入类型属性，默认为 'text'"
    },
    "value": {
      "default": "",
      "value": "",
      "type": "string | number",
      "description": "Controlled component value",
      "required": false,
      "description_zh": "受控组件值"
    },
    "valueIsNumericString": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "If value is passed as string representation of numbers (unformatted) and number is used in any format props like in prefix or suffix in numeric format and format prop in pattern format then this should be passed as true. false by default.",
      "required": false,
      "description_zh": "如果 value 作为数字的字符串表示形式（未格式化）传递，并且 number 用于任何格式 props，例如数字格式的 prefix 或 suffix 和 pattern 格式的 format prop，则应将其作为 true 传递。false 默认。"
    },
    "withAsterisk": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether the required asterisk should be displayed. Overrides required prop. Does not add required attribute to the input. false by default",
      "required": false,
      "description_zh": "确定是否应显示所需的星号。Overrides required 属性。不向输入添加 required 属性。false 默认"
    },
    "withErrorStyles": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether the input should have red border and red text color when the error prop is set, true by default",
      "required": false,
      "description_zh": "确定设置 error 属性时，input 是否应具有红色边框和红色文本颜色，默认为 true"
    },
    "withKeyboardEvents": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether up/down keyboard events should be handled to increment/decrement value, true by default",
      "required": false,
      "description_zh": "确定是否应将上/下键盘事件处理为递增/递减值，默认情况下为 true"
    },
    "wrapperProps": {
      "default": "",
      "value": "",
      "type": "Record<string, any>",
      "description": "Props passed down to the root element",
      "required": false,
      "description_zh": "向下传递到根元素的 props"
    }
  },
  "link": "https://mantine.dev/core/number-input/?t=props",
  "link_zh": "https://mantine.dev/core/number-input/?t=props",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "NumberInput"
}
