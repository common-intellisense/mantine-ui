{
  "name": "Calendar",
  "props": {
    "ariaLabels": {
      "default": "",
      "value": "",
      "type": "CalendarAriaLabels",
      "description": "Aria-label attributes for controls on different levels",
      "required": false,
      "description_zh": "不同级别控件的 Aria-label 属性"
    },
    "columnsToScroll": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "Number of columns to scroll when user clicks next/prev buttons, defaults to numberOfColumns",
      "required": false,
      "description_zh": "用户单击下一个/上一个按钮时要滚动的列数，默认为 numberOfColumns"
    },
    "date": {
      "default": "",
      "value": "",
      "type": "Date",
      "description": "Date that is displayed, used for controlled component",
      "required": false,
      "description_zh": "显示的日期，用于受控零部件"
    },
    "decadeLabelFormat": {
      "default": "",
      "value": "",
      "type": "string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)",
      "description": "Dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \"YYYY\"",
      "required": false,
      "description_zh": "dayjs 标签格式显示十年标签或根据日期值返回十年标签的函数，默认为 “YYYY”"
    },
    "defaultDate": {
      "default": "",
      "value": "",
      "type": "Date",
      "description": "Initial date that is displayed, used for uncontrolled component",
      "required": false,
      "description_zh": "显示的初始日期，用于非受控零部件"
    },
    "defaultLevel": {
      "default": "",
      "value": "",
      "type": "CalendarLevel",
      "description": "Initial level displayed to the user (decade, year, month), used for uncontrolled component",
      "required": false,
      "description_zh": "向用户显示的初始级别（十年、年、月），用于非受控组件"
    },
    "excludeDate": {
      "default": "",
      "value": "",
      "type": "((date: Date) => boolean)",
      "description": "Callback function to determine whether the day should be disabled",
      "required": false,
      "description_zh": "用于确定是否应禁用该日期的回调函数"
    },
    "firstDayOfWeek": {
      "default": "",
      "value": "",
      "type": "DayOfWeek",
      "description": "Number 0-6, 0 – Sunday, 6 – Saturday, defaults to 1 – Monday",
      "required": false,
      "description_zh": "数字 0-6,0 – 星期日，6 – 星期六，默认为 1 – 星期一"
    },
    "getDayAriaLabel": {
      "default": "",
      "value": "",
      "type": "((date: Date) => string)",
      "description": "Assigns aria-label to days based on date",
      "required": false,
      "description_zh": "根据日期将 aria-label 分配给天数"
    },
    "getDayProps": {
      "default": "",
      "value": "",
      "type": "((date: Date) => Omit<Partial<DayProps>, \"classNames\" | \"styles\" | \"vars\">)",
      "description": "Adds props to Day component based on date",
      "required": false,
      "description_zh": "根据日期向 Day 组件添加 props"
    },
    "getMonthControlProps": {
      "default": "",
      "value": "",
      "type": "((date: Date) => Partial<PickerControlProps>)",
      "description": "Adds props to month picker control based on date",
      "required": false,
      "description_zh": "根据日期向月份选取器控件添加 props"
    },
    "getYearControlProps": {
      "default": "",
      "value": "",
      "type": "((date: Date) => Partial<PickerControlProps>)",
      "description": "Adds props to year picker control based on date",
      "required": false,
      "description_zh": "根据日期向年份选取器控件添加 props"
    },
    "hasNextLevel": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether next level button should be enabled, defaults to true",
      "required": false,
      "description_zh": "确定是否应启用下一级按钮，默认为 true"
    },
    "hideOutsideDates": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether outside dates should be hidden, defaults to false",
      "required": false,
      "description_zh": "确定是否应隐藏外部日期，默认为 false"
    },
    "hideWeekdays": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether weekdays row should be hidden, defaults to false",
      "required": false,
      "description_zh": "确定是否应隐藏 weekdays 行，默认为 false"
    },
    "highlightToday": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether today should be highlighted with a border, false by default",
      "required": false,
      "description_zh": "确定是否应使用边框 false 突出显示今天"
    },
    "level": {
      "default": "",
      "value": "",
      "type": "CalendarLevel",
      "description": "Current level displayed to the user (decade, year, month), used for controlled component",
      "required": false,
      "description_zh": "向用户显示的当前级别（十年、年、月），用于受控组件"
    },
    "locale": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "Dayjs locale, defaults to value defined in DatesProvider",
      "required": false,
      "description_zh": "Dayjs 区域设置，默认为 DatesProvider 中定义的值"
    },
    "maxDate": {
      "default": "",
      "value": "",
      "type": "Date",
      "description": "Maximum possible date",
      "required": false,
      "description_zh": "最大可能日期"
    },
    "maxLevel": {
      "default": "",
      "value": "",
      "type": "CalendarLevel",
      "description": "Max level that user can go up to (decade, year, month), defaults to decade",
      "required": false,
      "description_zh": "用户可以达到的最高级别 （decade， year， month） ，默认为 decade"
    },
    "minDate": {
      "default": "",
      "value": "",
      "type": "Date",
      "description": "Minimum possible date",
      "required": false,
      "description_zh": "最短可能日期"
    },
    "minLevel": {
      "default": "",
      "value": "",
      "type": "CalendarLevel",
      "description": "Min level that user can go down to (decade, year, month), defaults to month",
      "required": false,
      "description_zh": "用户可以下降到的 Min level （decade， year， month），默认为 month"
    },
    "monthLabelFormat": {
      "default": "",
      "value": "",
      "type": "string | ((month: Date) => ReactNode)",
      "description": "Dayjs label format to display month label or a function that returns month label based on month value, defaults to \"MMMM YYYY\"",
      "required": false,
      "description_zh": "Dayjs 标签格式显示月份标签或根据月份值返回月份标签的函数，默认为 “MMMM YYYY”"
    },
    "monthsListFormat": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "Dayjs format for months list",
      "required": false,
      "description_zh": "月份列表的 Dayjs 格式"
    },
    "nextIcon": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Change next icon",
      "required": false,
      "description_zh": "Change next 图标"
    },
    "nextLabel": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "Aria-label for next button",
      "required": false,
      "description_zh": "Aria-label for next （用于下一个） 按钮"
    },
    "numberOfColumns": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "Number of columns to render next to each other",
      "required": false,
      "description_zh": "要紧挨着渲染的列数"
    },
    "onDateChange": {
      "default": "",
      "value": "",
      "type": "((date: Date) => void)",
      "description": "Called when date changes",
      "required": false,
      "description_zh": "日期更改时调用"
    },
    "onLevelChange": {
      "default": "",
      "value": "",
      "type": "((level: CalendarLevel) => void)",
      "description": "Called when level changes",
      "required": false,
      "description_zh": "在级别更改时调用"
    },
    "onMonthMouseEnter": {
      "default": "",
      "value": "",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>, date: Date) => void)",
      "description": "Called when mouse enters month control",
      "required": false,
      "description_zh": "当鼠标进入月份控件时调用"
    },
    "onMonthSelect": {
      "default": "",
      "value": "",
      "type": "((date: Date) => void)",
      "description": "Called when user clicks month on year level",
      "required": false,
      "description_zh": "当用户按年级别单击月时调用"
    },
    "onNextDecade": {
      "default": "",
      "value": "",
      "type": "((date: Date) => void)",
      "description": "Called when next decade button is clicked",
      "required": false,
      "description_zh": "单击下一个十年按钮时调用"
    },
    "onNextMonth": {
      "default": "",
      "value": "",
      "type": "((date: Date) => void)",
      "description": "Called when next month button is clicked",
      "required": false,
      "description_zh": "单击下个月按钮时调用"
    },
    "onNextYear": {
      "default": "",
      "value": "",
      "type": "((date: Date) => void)",
      "description": "Called when next year button is clicked",
      "required": false,
      "description_zh": "单击明年按钮时调用"
    },
    "onPreviousDecade": {
      "default": "",
      "value": "",
      "type": "((date: Date) => void)",
      "description": "Called when previous decade button is clicked",
      "required": false,
      "description_zh": "单击前十年按钮时调用"
    },
    "onPreviousMonth": {
      "default": "",
      "value": "",
      "type": "((date: Date) => void)",
      "description": "Called when previous month button is clicked",
      "required": false,
      "description_zh": "单击上个月按钮时调用"
    },
    "onPreviousYear": {
      "default": "",
      "value": "",
      "type": "((date: Date) => void)",
      "description": "Called when previous year button is clicked",
      "required": false,
      "description_zh": "单击上一年按钮时调用"
    },
    "onYearMouseEnter": {
      "default": "",
      "value": "",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>, date: Date) => void)",
      "description": "Called when mouse enters year control",
      "required": false,
      "description_zh": "当鼠标进入年份控制时调用"
    },
    "onYearSelect": {
      "default": "",
      "value": "",
      "type": "((date: Date) => void)",
      "description": "Called when user clicks year on decade level",
      "required": false,
      "description_zh": "当用户点击十年级别的年份时调用"
    },
    "previousIcon": {
      "default": "",
      "value": "",
      "type": "React.ReactNode",
      "description": "Change previous icon",
      "required": false,
      "description_zh": "更改上一个图标"
    },
    "previousLabel": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "Aria-label for previous button",
      "required": false,
      "description_zh": "上一个按钮的 Aria-label"
    },
    "renderDay": {
      "default": "",
      "value": "",
      "type": "((date: Date) => ReactNode)",
      "description": "Controls day value rendering",
      "required": false,
      "description_zh": "控制日值呈现"
    },
    "size": {
      "default": "",
      "value": "",
      "type": "MantineSize",
      "description": "Component size",
      "required": false,
      "description_zh": "组件尺寸"
    },
    "static": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether days should be static, static days can be used to display month if it is not expected that user will interact with the component in any way",
      "required": false,
      "description_zh": "确定 days 是否应为 static，如果不希望用户以任何方式与组件交互，则可以使用 static days 来显示月份"
    },
    "weekdayFormat": {
      "default": "",
      "value": "",
      "type": "string | ((date: Date) => ReactNode)",
      "description": "Dayjs format for weekdays names, defaults to \"dd\"",
      "required": false,
      "description_zh": "工作日名称的 Dayjs 格式，默认为 “dd”"
    },
    "weekendDays": {
      "default": "",
      "value": "",
      "type": "DayOfWeek[]",
      "description": "Indices of weekend days, 0-6, where 0 is Sunday and 6 is Saturday, defaults to value defined in DatesProvider",
      "required": false,
      "description_zh": "周末的索引 0-6，其中 0 是星期日，6 是星期六，默认为 DatesProvider 中定义的值"
    },
    "withCellSpacing": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Determines whether controls should be separated by spacing, true by default",
      "required": false,
      "description_zh": "确定是否应使用空格分隔控件，默认情况下为 true"
    },
    "yearLabelFormat": {
      "default": "",
      "value": "",
      "type": "string | ((year: Date) => ReactNode)",
      "description": "Dayjs label format to display year label or a function that returns year label based on year value, defaults to \"YYYY\"",
      "required": false,
      "description_zh": "Dayjs 标签格式显示年份标签，或者根据年份值返回年份标签的函数，默认为 “YYYY”"
    },
    "yearsListFormat": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "Dayjs format for years list, 'YYYY' by default",
      "required": false,
      "description_zh": "年份列表的 Dayjs 格式，默认为 'YYYY'"
    }
  },
  "link": "https://mantine.dev/dates/calendar/?t=props",
  "link_zh": "https://mantine.dev/dates/calendar/?t=props",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": [],
  "suggestions": [],
  "filename": "Calendar"
}
